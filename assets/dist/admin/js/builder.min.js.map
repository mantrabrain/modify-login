{"version":3,"file":"admin/js/builder.min.js","mappings":"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","sources":["webpack://modify-login/./src/admin/js/builder.js"],"sourcesContent":["jQuery(document).ready(function($) {\n    // Set up WordPress Gutenberg Color Picker\n    const { Component, render, createElement } = wp.element;\n    const { ColorPicker, BaseControl } = wp.components;\n    \n    // Default settings for reset\n    const defaultSettings = {\n        background_color: '#ffffff',\n        background_image: '',\n        background_size: 'cover',\n        background_position: 'center center',\n        background_repeat: 'no-repeat',\n        background_opacity: 1,\n        logo_url: '',\n        logo_width: '84px',\n        logo_height: '84px',\n        logo_position: 'center',\n        form_background: '#ffffff',\n        form_border_radius: '4px',\n        form_padding: '20px',\n        button_color: '#0073aa',\n        button_text_color: '#ffffff',\n        custom_css: '',\n        link_color: '',\n        link_hover_color: '',\n        label_color: ''\n    };\n    \n    // Initialize each color picker input\n    $('.color-picker').each(function() {\n        const input = $(this);\n        const inputId = input.attr('id');\n        const defaultColor = input.data('default-color') || '#ffffff';\n        const currentColor = input.val() || defaultColor;\n        const container = $('<div class=\"gutenberg-color-picker-container\"></div>');\n        \n        // Replace the input with a container\n        input.after(container);\n        \n        // Create a hidden input to store the value\n        const hiddenInput = $(`<input type=\"hidden\" id=\"${inputId}\" name=\"${inputId}\" value=\"${currentColor}\">`);\n        input.replaceWith(hiddenInput);\n        \n        // Create color picker component\n        class ColorPickerComponent extends Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    color: props.initialColor,\n                    isOpen: false\n                };\n            }\n            \n            render() {\n                return createElement(\n                    BaseControl,\n                    { id: this.props.inputId },\n                    createElement('div', { className: 'color-picker-main flex items-center' },\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-button',\n                            onClick: () => this.setState({ isOpen: !this.state.isOpen }),\n                            style: {\n                                backgroundColor: this.state.color,\n                                width: '32px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                boxShadow: '0 1px 0 #ccc'\n                            }\n                        }),\n                        createElement('input', {\n                            type: 'text',\n                            className: 'color-picker-input',\n                            value: this.state.color,\n                            onChange: (e) => {\n                                const newColor = e.target.value;\n                                this.setState({ color: newColor });\n                                this.props.onChange(newColor);\n                            },\n                            style: {\n                                marginLeft: '8px',\n                                width: '80px',\n                                height: '32px',\n                                padding: '0 8px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                fontFamily: 'monospace'\n                            }\n                        }),\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-clear',\n                            onClick: () => {\n                                this.setState({ color: '' });\n                                this.props.onChange('');\n                            },\n                            style: {\n                                marginLeft: '4px',\n                                padding: '0',\n                                width: '28px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                background: '#f0f0f1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }\n                        }, createElement('span', {\n                            className: 'dashicons dashicons-no-alt',\n                            style: {\n                                fontSize: '16px',\n                                width: '16px',\n                                height: '16px'\n                            }\n                        }))\n                    ),\n                    this.state.isOpen && createElement(\n                        'div',\n                        { className: 'color-picker-popover' },\n                        createElement(\n                            ColorPicker,\n                            {\n                                color: this.state.color,\n                                onChangeComplete: (colorObject) => {\n                                    const newColor = colorObject.hex;\n                                    this.setState({ color: newColor });\n                                    this.props.onChange(newColor);\n                                }\n                            }\n                        )\n                    )\n                );\n            }\n        }\n        \n        // Render the component\n        render(\n            createElement(ColorPickerComponent, {\n                inputId: inputId,\n                initialColor: currentColor,\n                onChange: (newColor) => {\n                    hiddenInput.val(newColor).trigger('change');\n                    updatePreview();\n                }\n            }),\n            container[0]\n        );\n    });\n\n    // Initialize media dropzones\n    $('.media-dropzone').each(function() {\n        const dropzone = $(this);\n        const dropzoneArea = dropzone.find('.dropzone-area');\n        const input = dropzone.find('input[type=\"hidden\"]');\n        const imagePreview = dropzone.find('.image-preview');\n        const previewImg = imagePreview.find('img');\n        const targetField = dropzone.data('target');\n        \n        // Show existing image preview if available\n        if (input.val()) {\n            previewImg.attr('src', input.val());\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            // Try to get the filename from the URL\n            const url = new URL(input.val());\n            const filename = url.pathname.split('/').pop();\n            imagePreview.find('.filename').text(filename);\n            \n            // Create a temporary image to get dimensions\n            const tempImg = new Image();\n            tempImg.onload = function() {\n                imagePreview.find('.dimensions').text(`${this.width} × ${this.height}`);\n            };\n            tempImg.src = input.val();\n        }\n        \n        // Setup click handler on dropzone area to open media library\n        dropzoneArea.on('click', function(e) {\n            e.preventDefault();\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle drag and drop events\n        dropzoneArea.on('dragover', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).addClass('dragover');\n        });\n        \n        dropzoneArea.on('dragleave', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n        });\n        \n        dropzoneArea.on('drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n            \n            // Open the media library instead of direct handling\n            // WordPress media library can handle the dropped files\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle remove image button\n        dropzone.find('.remove-image-button').on('click', function(e) {\n            e.preventDefault();\n            input.val('').trigger('change');\n            imagePreview.addClass('hidden');\n            dropzoneArea.removeClass('hidden');\n            updatePreview();\n        });\n    });\n    \n    // Initialize opacity slider\n    initializeOpacitySlider();\n    \n    function initializeOpacitySlider() {\n        const container = $('.opacity-slider-container');\n        const track = $('.opacity-slider-track');\n        const fill = $('.opacity-slider-fill');\n        const handle = $('.opacity-slider-handle');\n        const input = $('#background_opacity');\n        const valueDisplay = $('#background_opacity_value');\n        \n        // Set initial position\n        const initialValue = parseFloat(input.val());\n        updateSliderPosition(initialValue);\n        \n        // Update the slider UI\n        function updateSliderPosition(value) {\n            // Ensure value is between 0 and 1\n            value = Math.max(0, Math.min(1, value));\n            \n            // Calculate the position percentage\n            const percent = value * 100;\n            \n            // Update the fill and handle positions\n            fill.css('width', `${percent}%`);\n            handle.css('left', `${percent}%`);\n            handle.css('right', 'auto');\n            handle.css('transform', 'translate(-50%, -50%)');\n            \n            // Update the input value and display\n            input.val(value);\n            valueDisplay.text(`${Math.round(percent)}%`);\n        }\n        \n        // Handle mouse/touch down on track\n        track.on('mousedown touchstart', function(e) {\n            e.preventDefault();\n            handleSliderInteraction(e);\n            \n            // Add mouse/touch move and up events\n            $(document).on('mousemove touchmove', handleSliderInteraction);\n            $(document).on('mouseup touchend', function() {\n                $(document).off('mousemove touchmove', handleSliderInteraction);\n                $(document).off('mouseup touchend');\n            });\n        });\n        \n        // Handle mouse/touch down on handle\n        handle.on('mousedown touchstart', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            \n            // Add mouse/touch move and up events\n            $(document).on('mousemove touchmove', handleSliderInteraction);\n            $(document).on('mouseup touchend', function() {\n                $(document).off('mousemove touchmove', handleSliderInteraction);\n                $(document).off('mouseup touchend');\n            });\n        });\n        \n        // Process mouse/touch interaction\n        function handleSliderInteraction(e) {\n            // Get mouse/touch position\n            let clientX;\n            if (e.type === 'touchmove' || e.type === 'touchstart') {\n                clientX = e.originalEvent.touches[0].clientX;\n            } else {\n                clientX = e.clientX;\n            }\n            \n            // Get track dimensions and position\n            const trackRect = track[0].getBoundingClientRect();\n            \n            // Calculate value based on position\n            let value = (clientX - trackRect.left) / trackRect.width;\n            \n            // Constrain value between 0 and 1\n            value = Math.max(0, Math.min(1, value));\n            \n            // Update slider and trigger change\n            updateSliderPosition(value);\n            updatePreview();\n        }\n        \n        // Keyboard accessibility\n        handle.on('keydown', function(e) {\n            let value = parseFloat(input.val());\n            \n            switch (e.key) {\n                case 'ArrowRight':\n                case 'ArrowUp':\n                    value = Math.min(1, value + 0.01);\n                    break;\n                case 'ArrowLeft':\n                case 'ArrowDown':\n                    value = Math.max(0, value - 0.01);\n                    break;\n                case 'Home':\n                    value = 0;\n                    break;\n                case 'End':\n                    value = 1;\n                    break;\n                default:\n                    return;\n            }\n            \n            e.preventDefault();\n            updateSliderPosition(value);\n            updatePreview();\n        });\n    }\n    \n    // Handle all image property toggle buttons - Keep popovers within their parent containers\n    $('.toggle-image-properties').on('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const button = $(this);\n        const targetId = button.data('target');\n        const popover = $(`#${targetId}`);\n        \n        // Close any other open popovers\n        $('.image-properties.active').not(popover).removeClass('active');\n        \n        // Toggle current popover visibility\n        popover.toggleClass('active');\n        \n        // Make sure popover is in right position (no need to manually position since we use CSS)\n        if (popover.hasClass('active')) {\n            // Ensure the popover is within the #modify-login-builder container\n            if (!popover.closest('#modify-login-builder').length) {\n                $('#modify-login-builder').find(`#${targetId}`).addClass('active');\n            }\n        }\n    });\n    \n    // Function to open the media library\n    function openMediaLibrary(input, imagePreview, dropzoneArea) {\n        const frame = wp.media({\n            title: 'Select Image',\n            button: {\n                text: 'Use this image'\n            },\n            multiple: false,\n            library: {\n                type: 'image'\n            }\n        });\n\n        frame.on('select', function() {\n            const attachment = frame.state().get('selection').first().toJSON();\n            input.val(attachment.url).trigger('change');\n            \n            // Update preview\n            imagePreview.find('img').attr('src', attachment.url);\n            imagePreview.find('.filename').text(attachment.filename);\n            imagePreview.find('.dimensions').text(`${attachment.width} × ${attachment.height}`);\n            \n            // Show preview, hide dropzone\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            updatePreview();\n        });\n\n        frame.open();\n    }\n    \n    // Close popovers when clicking outside\n    $(document).on('click', function(e) {\n        if (!$(e.target).closest('.image-properties, .toggle-image-properties, .color-picker-popover, .color-picker-button').length) {\n            $('.image-properties.active').removeClass('active');\n        }\n    });\n    \n    // Close popovers when clicking close button\n    $('.close-popover').on('click', function(e) {\n        e.preventDefault();\n        $(this).closest('.image-properties').removeClass('active');\n    });\n\n    // Handle form changes\n    $('.form-group input:not(.color-picker), .form-group textarea, .form-group select').on('change input', function() {\n        updatePreview();\n    });\n\n    // Update preview iframe\n    function updatePreview() {\n        const preview = $('#login-preview');\n        const settings = {};\n        \n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            settings[$(this).attr('name')] = $(this).val();\n        });\n\n        // Apply settings to preview iframe\n        const previewDoc = preview[0].contentDocument || preview[0].contentWindow.document;\n        const style = previewDoc.createElement('style');\n        style.id = 'modify-login-custom-css';\n        const customCss = previewDoc.getElementById('modify-login-custom-css');\n        \n        // Generate CSS based on current settings\n        let css = `\n            body.login {\n                ${settings.background_color ? `background-color: ${settings.background_color} !important;` : ''}\n                ${settings.background_image ? `position: relative !important;` : ''}\n            }\n            \n            ${settings.background_image ? `\n                body.login::before {\n                    content: \"\" !important;\n                    position: absolute !important;\n                    top: 0 !important;\n                    left: 0 !important;\n                    width: 100% !important;\n                    height: 100% !important;\n                    background-image: url('${settings.background_image}') !important;\n                    ${settings.background_size ? `background-size: ${settings.background_size} !important;` : ''}\n                    ${settings.background_position ? `background-position: ${settings.background_position} !important;` : ''}\n                    ${settings.background_repeat ? `background-repeat: ${settings.background_repeat} !important;` : ''}\n                    opacity: ${settings.background_opacity} !important;\n                    z-index: -1 !important;\n                }\n            ` : ''}\n            .login form {\n                ${settings.form_background ? `background: ${settings.form_background} !important;` : ''}\n                ${settings.form_border_radius ? `border-radius: ${settings.form_border_radius} !important;` : ''}\n                ${settings.form_padding ? `padding: ${settings.form_padding} !important;` : ''}\n                box-shadow: 0 1px 3px rgba(0, 0, 0, 0.13) !important;\n            }\n            .wp-core-ui .button-primary {\n                ${settings.button_color ? `background: ${settings.button_color} !important; border-color: ${settings.button_color} !important;` : ''}\n                ${settings.button_text_color ? `color: ${settings.button_text_color} !important;` : ''}\n                text-decoration: none !important;\n                text-shadow: none !important;\n            }\n            \n            /* Link Colors */\n            ${settings.link_color ? `.login a, .login #nav a, .login #backtoblog a {\n                color: ${settings.link_color} !important;\n            }` : ''}\n            \n            /* Link Hover Colors */\n            ${settings.link_hover_color ? `.login a:hover, .login #nav a:hover, .login #backtoblog a:hover {\n                color: ${settings.link_hover_color} !important;\n            }` : ''}\n            \n            /* Form Label Colors */\n            ${settings.label_color ? `.login form label {\n                color: ${settings.label_color} !important;\n            }` : ''}\n        `;\n\n        \n        // Add logo styles if logo is set\n        if (settings.logo_url) {\n            css += `\n                .login h1 a {\n                    background-image: url('${settings.logo_url}') !important;\n                    ${settings.logo_width ? `width: ${settings.logo_width} !important;` : ''}\n                    ${settings.logo_height ? `height: ${settings.logo_height} !important;` : ''}\n                    background-size: contain !important;\n                    background-position: center !important;\n                    background-repeat: no-repeat !important;\n                    text-indent: -9999px !important;\n                    ${settings.logo_position ? `text-align: ${settings.logo_position} !important;` : ''}\n                    margin: 0 auto 25px auto !important;\n                }\n            `;\n        }\n        \n        // Add user's custom CSS\n        if (settings.custom_css) {\n            css += settings.custom_css;\n        }\n        \n        style.textContent = css;\n        //previewDoc.head.appendChild(style);\n              \n        customCss.innerHTML = css;\n    }\n\n    // Function to adjust color brightness (similar to the PHP version)\n    function adjustBrightness(hex, steps) {\n        // Remove # if present\n        hex = hex.replace('#', '');\n        \n        // Parse the hex color\n        const r = parseInt(hex.substr(0, 2), 16);\n        const g = parseInt(hex.substr(2, 2), 16);\n        const b = parseInt(hex.substr(4, 2), 16);\n        \n        // Adjust brightness\n        const adjustR = Math.max(0, Math.min(255, r + steps));\n        const adjustG = Math.max(0, Math.min(255, g + steps));\n        const adjustB = Math.max(0, Math.min(255, b + steps));\n        \n        // Convert back to hex\n        const rHex = adjustR.toString(16).padStart(2, '0');\n        const gHex = adjustG.toString(16).padStart(2, '0');\n        const bHex = adjustB.toString(16).padStart(2, '0');\n        \n        return `#${rHex}${gHex}${bHex}`;\n    }\n\n    // Handle save button\n    $('.save-button').on('click', function(e) {\n        e.preventDefault();\n        const button = $(this);\n        const formData = new FormData();\n\n        // Add action parameter for saving\n        formData.append('action', 'modify_login_save_builder_settings');\n        formData.append('nonce', modifyLoginBuilder.nonce);\n\n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            formData.append($(this).attr('name'), $(this).val());\n        });\n\n        // Disable button and show loading state\n        button.prop('disabled', true).text('Saving...');\n\n        // Send AJAX request to save settings\n        $.ajax({\n            url: modifyLoginBuilder.ajax_url,\n            type: 'POST',\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function(response) {\n                if (response.success) {\n                    button.text('Settings Saved!');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                } else {\n                    button.text('Error Saving');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                }\n            },\n            error: function() {\n                button.text('Error Saving');\n                setTimeout(function() {\n                    button.text('Save Settings');\n                }, 2000);\n            },\n            complete: function() {\n                button.prop('disabled', false);\n            }\n        });\n    });\n    \n    // Handle reset button\n    $('#reset-all-button').on('click', function(e) {\n        e.preventDefault();\n        \n        // Create custom confirmation modal\n        const modalOverlay = $('<div class=\"custom-modal-overlay\"></div>');\n        const modal = $(`\n            <div class=\"custom-modal bg-white rounded-lg shadow-lg w-96\">\n                <div class=\"custom-modal-header px-5 py-4 border-b border-gray-200 flex items-center\">\n                    <span class=\"dashicons dashicons-info text-blue-500 mr-2 text-xl\"></span>\n                    <h3 class=\"custom-modal-title text-lg font-semibold text-gray-900\">Reset Form</h3>\n                </div>\n                <div class=\"custom-modal-content p-5 text-gray-600\">\n                    <p class=\"mb-2\">You are about to reset all form fields to their default values.</p>\n                    <p class=\"mb-2\">This will only reset the form, not save the changes.</p>\n                    <p>Click Save after resetting if you want to apply these changes.</p>\n                </div>\n                <div class=\"custom-modal-actions p-4 bg-gray-50 flex justify-end gap-3 rounded-b-lg\">\n                    <button class=\"custom-modal-cancel px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300\">Cancel</button>\n                    <button class=\"custom-modal-confirm px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\">Reset Form</button>\n                </div>\n            </div>\n        `);\n        \n        modalOverlay.append(modal);\n        $('body').append(modalOverlay);\n        \n        // Fade in animation\n        setTimeout(function() {\n            modalOverlay.addClass('active');\n        }, 10);\n        \n        // Handle cancel button\n        modal.find('.custom-modal-cancel').on('click', function() {\n            // Close modal with animation\n            modalOverlay.removeClass('active');\n            setTimeout(function() {\n                modalOverlay.remove();\n            }, 300);\n        });\n        \n        // Handle confirm button\n        modal.find('.custom-modal-confirm').on('click', function() {\n            // Close modal with animation\n            modalOverlay.removeClass('active');\n            setTimeout(function() {\n                modalOverlay.remove();\n                \n                // Get the reset button\n                const button = $('#reset-all-button');\n                \n                // Visual feedback\n                button.addClass('opacity-50').prop('disabled', true).text('Resetting...');\n                \n                // Reset all form fields to default values using the defaultSettings object\n                Object.keys(defaultSettings).forEach(function(key) {\n                    const input = $(`input#${key}`);\n                    if (input.length) {\n                        input.val(defaultSettings[key]).trigger('change');\n                        \n                        // Update color picker UI for color fields\n                        if (input.prev('.gutenberg-color-picker-container').length) {\n                            const container = input.prev('.gutenberg-color-picker-container');\n                            container.find('.color-picker-button').css('background-color', defaultSettings[key]);\n                            container.find('.color-picker-input').val(defaultSettings[key]);\n                        }\n                    }\n                    \n                    // Handle select elements\n                    const select = $(`select#${key}`);\n                    if (select.length) {\n                        select.val(defaultSettings[key]).trigger('change');\n                    }\n                    \n                    // Handle textarea elements\n                    const textarea = $(`textarea#${key}`);\n                    if (textarea.length) {\n                        textarea.val(defaultSettings[key]).trigger('change');\n                    }\n                });\n                \n                // Handle background image field\n                if (!defaultSettings.background_image) {\n                    const bgImageInput = $('input#background_image');\n                    bgImageInput.val('').trigger('change');\n                    const imagePreview = bgImageInput.closest('.media-dropzone').find('.image-preview');\n                    const dropzoneArea = bgImageInput.closest('.media-dropzone').find('.dropzone-area');\n                    imagePreview.addClass('hidden');\n                    dropzoneArea.removeClass('hidden');\n                }\n                \n                // Handle logo image field\n                if (!defaultSettings.logo_url) {\n                    const logoInput = $('input#logo_url');\n                    logoInput.val('').trigger('change');\n                    const imagePreview = logoInput.closest('.media-dropzone').find('.image-preview');\n                    const dropzoneArea = logoInput.closest('.media-dropzone').find('.dropzone-area');\n                    imagePreview.addClass('hidden');\n                    dropzoneArea.removeClass('hidden');\n                }\n                \n                // Update preview\n                updatePreview();\n                \n                // Reset button state\n                setTimeout(function() {\n                    button.removeClass('opacity-50').prop('disabled', false).text('Reset All');\n                    \n                    // Show a notification\n                    showNotification('success', 'Form has been reset to default values. Click Save to apply changes.');\n                }, 500);\n            }, 300);\n        });\n    });\n    \n    // Initialize preview\n    updatePreview();\n});"],"names":["jQuery","document","ready","$","_wp$element","wp","element","Component","render","createElement","_wp$components","components","ColorPicker","BaseControl","defaultSettings","background_color","background_image","background_size","background_position","background_repeat","background_opacity","logo_url","logo_width","logo_height","logo_position","form_background","form_border_radius","form_padding","button_color","button_text_color","custom_css","link_color","link_hover_color","label_color","openMediaLibrary","input","imagePreview","dropzoneArea","frame","media","title","button","text","multiple","library","type","on","attachment","state","get","first","toJSON","val","url","trigger","find","attr","filename","concat","width","height","removeClass","addClass","updatePreview","open","preview","settings","each","this","previewDoc","contentDocument","contentWindow","style","id","customCss","getElementById","css","textContent","innerHTML","inputId","defaultColor","data","currentColor","container","after","hiddenInput","replaceWith","ColorPickerComponent","_Component","props","_this","_classCallCheck","_callSuper","color","initialColor","isOpen","_inherits","key","value","_this2","className","onClick","setState","backgroundColor","borderRadius","border","cursor","boxShadow","onChange","e","newColor","target","marginLeft","padding","fontFamily","background","display","alignItems","justifyContent","fontSize","onChangeComplete","colorObject","hex","dropzone","previewImg","URL","pathname","split","pop","tempImg","Image","onload","src","preventDefault","stopPropagation","track","fill","handle","valueDisplay","updateSliderPosition","percent","Math","max","min","round","handleSliderInteraction","clientX","originalEvent","touches","trackRect","getBoundingClientRect","left","parseFloat","off","initializeOpacitySlider","targetId","popover","not","toggleClass","hasClass","closest","length","formData","FormData","append","modifyLoginBuilder","nonce","prop","ajax","ajax_url","processData","contentType","success","response","setTimeout","error","complete","modalOverlay","modal","remove","Object","keys","forEach","prev","select","textarea","bgImageInput","logoInput","showNotification"],"sourceRoot":""}