{"version":3,"file":"admin/js/builder.min.js","mappings":"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","sources":["webpack://modify-login/./src/admin/js/builder.js"],"sourcesContent":["jQuery(document).ready(function($) {\n    // Set up WordPress Gutenberg Color Picker\n    const { Component, render, createElement } = wp.element;\n    const { ColorPicker, BaseControl } = wp.components;\n    \n    // Default settings for reset\n    const defaultSettings = {\n        background_color: '#ffffff',\n        background_image: '',\n        background_size: 'cover',\n        background_position: 'center center',\n        background_repeat: 'no-repeat',\n        logo_url: '',\n        logo_width: '84px',\n        logo_height: '84px',\n        logo_position: 'center',\n        form_background: '#ffffff',\n        form_border_radius: '4px',\n        form_padding: '20px',\n        button_color: '#0073aa',\n        button_text_color: '#ffffff',\n        custom_css: ''\n    };\n    \n    // Initialize each color picker input\n    $('.color-picker').each(function() {\n        const input = $(this);\n        const inputId = input.attr('id');\n        const defaultColor = input.data('default-color') || '#ffffff';\n        const currentColor = input.val() || defaultColor;\n        const container = $('<div class=\"gutenberg-color-picker-container\"></div>');\n        \n        // Replace the input with a container\n        input.after(container);\n        \n        // Create a hidden input to store the value\n        const hiddenInput = $(`<input type=\"hidden\" id=\"${inputId}\" name=\"${inputId}\" value=\"${currentColor}\">`);\n        input.replaceWith(hiddenInput);\n        \n        // Create color picker component\n        class ColorPickerComponent extends Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    color: props.initialColor,\n                    isOpen: false\n                };\n            }\n            \n            render() {\n                return createElement(\n                    BaseControl,\n                    { id: this.props.inputId },\n                    createElement('div', { className: 'color-picker-main' },\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-button',\n                            onClick: () => this.setState({ isOpen: !this.state.isOpen }),\n                            style: {\n                                backgroundColor: this.state.color,\n                                width: '32px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                boxShadow: '0 1px 0 #ccc'\n                            }\n                        }),\n                        createElement('span', {\n                            className: 'color-picker-value',\n                            style: {\n                                marginLeft: '8px',\n                                lineHeight: '32px',\n                                verticalAlign: 'top'\n                            }\n                        }, this.state.color)\n                    ),\n                    this.state.isOpen && createElement(\n                        'div',\n                        { className: 'color-picker-popover' },\n                        createElement(\n                            ColorPicker,\n                            {\n                                color: this.state.color,\n                                onChangeComplete: (colorObject) => {\n                                    const newColor = colorObject.hex;\n                                    this.setState({ color: newColor });\n                                    this.props.onChange(newColor);\n                                }\n                            }\n                        )\n                    )\n                );\n            }\n        }\n        \n        // Render the component\n        render(\n            createElement(ColorPickerComponent, {\n                inputId: inputId,\n                initialColor: currentColor,\n                onChange: (newColor) => {\n                    hiddenInput.val(newColor).trigger('change');\n                    updatePreview();\n                }\n            }),\n            container[0]\n        );\n    });\n\n    // Initialize media dropzones\n    $('.media-dropzone').each(function() {\n        const dropzone = $(this);\n        const dropzoneArea = dropzone.find('.dropzone-area');\n        const input = dropzone.find('input[type=\"hidden\"]');\n        const imagePreview = dropzone.find('.image-preview');\n        const previewImg = imagePreview.find('img');\n        const targetField = dropzone.data('target');\n        \n        // Show existing image preview if available\n        if (input.val()) {\n            previewImg.attr('src', input.val());\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            // Try to get the filename from the URL\n            const url = new URL(input.val());\n            const filename = url.pathname.split('/').pop();\n            imagePreview.find('.filename').text(filename);\n            \n            // Create a temporary image to get dimensions\n            const tempImg = new Image();\n            tempImg.onload = function() {\n                imagePreview.find('.dimensions').text(`${this.width} × ${this.height}`);\n            };\n            tempImg.src = input.val();\n        }\n        \n        // Setup click handler on dropzone area to open media library\n        dropzoneArea.on('click', function(e) {\n            e.preventDefault();\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle drag and drop events\n        dropzoneArea.on('dragover', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).addClass('dragover');\n        });\n        \n        dropzoneArea.on('dragleave', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n        });\n        \n        dropzoneArea.on('drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n            \n            // Open the media library instead of direct handling\n            // WordPress media library can handle the dropped files\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle remove image button\n        dropzone.find('.remove-image-button').on('click', function(e) {\n            e.preventDefault();\n            input.val('').trigger('change');\n            imagePreview.addClass('hidden');\n            dropzoneArea.removeClass('hidden');\n            updatePreview();\n        });\n    });\n    \n    // Handle all image property toggle buttons - Keep popovers within their parent containers\n    $('.toggle-image-properties').on('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const button = $(this);\n        const targetId = button.data('target');\n        const popover = $(`#${targetId}`);\n        \n        // Close any other open popovers\n        $('.image-properties.active').not(popover).removeClass('active');\n        \n        // Toggle current popover visibility\n        popover.toggleClass('active');\n        \n        // Make sure popover is in right position (no need to manually position since we use CSS)\n        if (popover.hasClass('active')) {\n            // Ensure the popover is within the #modify-login-builder container\n            if (!popover.closest('#modify-login-builder').length) {\n                $('#modify-login-builder').find(`#${targetId}`).addClass('active');\n            }\n        }\n    });\n    \n    // Function to open the media library\n    function openMediaLibrary(input, imagePreview, dropzoneArea) {\n        const frame = wp.media({\n            title: 'Select Image',\n            button: {\n                text: 'Use this image'\n            },\n            multiple: false,\n            library: {\n                type: 'image'\n            }\n        });\n\n        frame.on('select', function() {\n            const attachment = frame.state().get('selection').first().toJSON();\n            input.val(attachment.url).trigger('change');\n            \n            // Update preview\n            imagePreview.find('img').attr('src', attachment.url);\n            imagePreview.find('.filename').text(attachment.filename);\n            imagePreview.find('.dimensions').text(`${attachment.width} × ${attachment.height}`);\n            \n            // Show preview, hide dropzone\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            updatePreview();\n        });\n\n        frame.open();\n    }\n    \n    // Close popovers when clicking outside\n    $(document).on('click', function(e) {\n        if (!$(e.target).closest('.image-properties, .toggle-image-properties, .color-picker-popover, .color-picker-button').length) {\n            $('.image-properties.active').removeClass('active');\n        }\n    });\n    \n    // Close popovers when clicking close button\n    $('.close-popover').on('click', function(e) {\n        e.preventDefault();\n        $(this).closest('.image-properties').removeClass('active');\n    });\n\n    // Handle form changes\n    $('.form-group input:not(.color-picker), .form-group textarea, .form-group select').on('change input', function() {\n        updatePreview();\n    });\n\n    // Update preview iframe\n    function updatePreview() {\n        const preview = $('#login-preview');\n        const settings = {};\n        \n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            settings[$(this).attr('name')] = $(this).val();\n        });\n\n        // Apply settings to preview iframe\n        const previewDoc = preview[0].contentDocument || preview[0].contentWindow.document;\n        const style = previewDoc.createElement('style');\n        \n        // Generate CSS based on current settings\n        let css = `\n            body.login {\n                background-color: ${settings.background_color || '#ffffff'};\n                ${settings.background_image ? `\n                    background-image: url('${settings.background_image}');\n                    background-size: ${settings.background_size || 'cover'};\n                    background-position: ${settings.background_position || 'center center'};\n                    background-repeat: ${settings.background_repeat || 'no-repeat'};\n                ` : 'background-image: none;'}\n            }\n            #login {\n                background: ${settings.form_background || '#ffffff'};\n                border-radius: ${settings.form_border_radius || '4px'};\n                padding: ${settings.form_padding || '20px'};\n            }\n            .wp-core-ui .button-primary {\n                background: ${settings.button_color || '#0073aa'};\n                border-color: ${settings.button_color || '#0073aa'};\n                color: ${settings.button_text_color || '#ffffff'};\n            }\n        `;\n        \n        // Add logo styles if logo is set\n        if (settings.logo_url) {\n            css += `\n                .login h1 a {\n                    background-image: url('${settings.logo_url}');\n                    width: ${settings.logo_width || '84px'};\n                    height: ${settings.logo_height || '84px'};\n                    background-size: contain;\n                    background-position: center;\n                    background-repeat: no-repeat;\n                    text-indent: -9999px;\n                    text-align: ${settings.logo_position || 'center'};\n                }\n            `;\n        } else {\n            css += `\n                .login h1 a {\n                    background-image: none;\n                    width: auto;\n                    height: auto;\n                    text-indent: 0;\n                }\n            `;\n        }\n        \n        // Add custom CSS\n        if (settings.custom_css) {\n            css += settings.custom_css;\n        }\n        \n        style.textContent = css;\n        previewDoc.head.appendChild(style);\n    }\n\n    // Handle save button\n    $('.save-button').on('click', function(e) {\n        e.preventDefault();\n        const button = $(this);\n        const formData = new FormData();\n\n        // Add action parameter for saving\n        formData.append('action', 'modify_login_save_builder_settings');\n        formData.append('nonce', modifyLoginBuilder.nonce);\n\n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            formData.append($(this).attr('name'), $(this).val());\n        });\n\n        // Disable button and show loading state\n        button.prop('disabled', true).text('Saving...');\n\n        // Send AJAX request to save settings\n        $.ajax({\n            url: modifyLoginBuilder.ajax_url,\n            type: 'POST',\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function(response) {\n                if (response.success) {\n                    button.text('Settings Saved!');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                } else {\n                    button.text('Error Saving');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                }\n            },\n            error: function() {\n                button.text('Error Saving');\n                setTimeout(function() {\n                    button.text('Save Settings');\n                }, 2000);\n            },\n            complete: function() {\n                button.prop('disabled', false);\n            }\n        });\n    });\n    \n    // Handle reset button\n    $('.reset-button').on('click', function(e) {\n        e.preventDefault();\n        \n        // Create custom confirmation modal\n        const modalOverlay = $('<div class=\"custom-modal-overlay\"></div>');\n        const modal = $(`\n            <div class=\"custom-modal\">\n                <div class=\"custom-modal-header\">\n                    <span class=\"custom-modal-icon\">ℹ️</span>\n                    <h3 class=\"custom-modal-title\">Reset All Settings</h3>\n                </div>\n                <div class=\"custom-modal-content\">\n                    <p>You are about to reset all login customization settings to their default values.</p>\n                    <p>This action cannot be undone. Are you sure you want to proceed?</p>\n                </div>\n                <div class=\"custom-modal-actions\">\n                    <button class=\"custom-modal-cancel\">Cancel</button>\n                    <button class=\"custom-modal-confirm\"><span class=\"dashicons dashicons-image-rotate\"></span>Reset All</button>\n                </div>\n            </div>\n        `);\n        \n        modalOverlay.append(modal);\n        $('body').append(modalOverlay);\n        \n        // Fade in animation\n        setTimeout(function() {\n            modalOverlay.addClass('active');\n        }, 10);\n        \n        // Handle cancel button\n        modal.find('.custom-modal-cancel').on('click', function() {\n            // Close modal with animation\n            modalOverlay.removeClass('active');\n            setTimeout(function() {\n                modalOverlay.remove();\n            }, 300);\n        });\n        \n        // Handle confirm button\n        modal.find('.custom-modal-confirm').on('click', function() {\n            // Close modal with animation\n            modalOverlay.removeClass('active');\n            setTimeout(function() {\n                modalOverlay.remove();\n                \n                // Get the reset button\n                const button = $('.reset-button');\n                \n                // Visual feedback\n                button.prop('disabled', true).text('Resetting...');\n                \n                // Send AJAX request to reset settings on the server\n                const formData = new FormData();\n                formData.append('action', 'modify_login_reset_builder_settings');\n                formData.append('nonce', modifyLoginBuilder.nonce);\n                \n                $.ajax({\n                    url: modifyLoginBuilder.ajax_url,\n                    type: 'POST',\n                    data: formData,\n                    processData: false,\n                    contentType: false,\n                    success: function(response) {\n                        if (response.success) {\n                            // Reset form fields in the UI\n                            // Reset hidden inputs for color pickers\n                            $('input#background_color').val(defaultSettings.background_color).trigger('change');\n                            $('input#form_background').val(defaultSettings.form_background).trigger('change');\n                            $('input#button_color').val(defaultSettings.button_color).trigger('change');\n                            $('input#button_text_color').val(defaultSettings.button_text_color).trigger('change');\n                            \n                            // Reset image fields\n                            $('input#background_image').val('').trigger('change');\n                            $('input#logo_url').val('').trigger('change');\n                            \n                            // Reset select fields\n                            $('select#background_size').val(defaultSettings.background_size).trigger('change');\n                            $('select#background_position').val(defaultSettings.background_position).trigger('change');\n                            $('select#background_repeat').val(defaultSettings.background_repeat).trigger('change');\n                            $('select#logo_position').val(defaultSettings.logo_position).trigger('change');\n                            \n                            // Reset input text fields\n                            $('input#form_border_radius').val(defaultSettings.form_border_radius).trigger('change');\n                            $('input#form_padding').val(defaultSettings.form_padding).trigger('change');\n                            $('input#logo_width').val(defaultSettings.logo_width).trigger('change');\n                            $('input#logo_height').val(defaultSettings.logo_height).trigger('change');\n                            \n                            // Reset textarea\n                            $('textarea#custom_css').val(defaultSettings.custom_css).trigger('change');\n                            \n                            // Hide all image previews and show dropzones\n                            $('.image-preview').addClass('hidden');\n                            $('.dropzone-area').removeClass('hidden');\n                            \n                            // Force refresh color pickers UI by manually updating them\n                            $('.gutenberg-color-picker-container').each(function(){\n                                const container = $(this);\n                                const hiddenInput = container.prev('input[type=\"hidden\"]');\n                                const id = hiddenInput.attr('id');\n                                const defaultColor = defaultSettings[id] || '#ffffff';\n                                \n                                // Update color button and text display\n                                container.find('.color-picker-button').css('background-color', defaultColor);\n                                container.find('.color-picker-value').text(defaultColor);\n                            });\n                            \n                            // Update preview\n                            updatePreview();\n                            \n                            // Update visual state\n                            button.text('Reset Complete!');\n                        } else {\n                            button.text('Error Resetting');\n                        }\n                    },\n                    error: function() {\n                        button.text('Error Resetting');\n                    },\n                    complete: function() {\n                        setTimeout(function() {\n                            button.prop('disabled', false).empty().append('<span class=\"dashicons dashicons-image-rotate text-lg w-5 h-5\"></span>');\n                        }, 1500);\n                    }\n                });\n            }, 300);\n        });\n    });\n    \n    // Initialize preview\n    updatePreview();\n});"],"names":["jQuery","document","ready","$","_wp$element","wp","element","Component","render","createElement","_wp$components","components","ColorPicker","BaseControl","defaultSettings","background_color","background_image","background_size","background_position","background_repeat","logo_url","logo_width","logo_height","logo_position","form_background","form_border_radius","form_padding","button_color","button_text_color","custom_css","openMediaLibrary","input","imagePreview","dropzoneArea","frame","media","title","button","text","multiple","library","type","on","attachment","state","get","first","toJSON","val","url","trigger","find","attr","filename","concat","width","height","removeClass","addClass","updatePreview","open","preview","settings","each","this","previewDoc","contentDocument","contentWindow","style","css","textContent","head","appendChild","inputId","defaultColor","data","currentColor","container","after","hiddenInput","replaceWith","ColorPickerComponent","_Component","props","_this","_classCallCheck","_callSuper","color","initialColor","isOpen","_inherits","key","value","_this2","id","className","onClick","setState","backgroundColor","borderRadius","border","cursor","boxShadow","marginLeft","lineHeight","verticalAlign","onChangeComplete","colorObject","newColor","hex","onChange","dropzone","previewImg","URL","pathname","split","pop","tempImg","Image","onload","src","e","preventDefault","stopPropagation","targetId","popover","not","toggleClass","hasClass","closest","length","target","formData","FormData","append","modifyLoginBuilder","nonce","prop","ajax","ajax_url","processData","contentType","success","response","setTimeout","error","complete","modalOverlay","modal","remove","prev","empty"],"sourceRoot":""}