{"version":3,"file":"admin/js/builder.min.js","mappings":"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","sources":["webpack://modify-login/./src/admin/js/builder.js"],"sourcesContent":["jQuery(document).ready(function($) {\n    // Set up WordPress Gutenberg Color Picker\n    const { Component, render, createElement } = wp.element;\n    const { ColorPicker, BaseControl } = wp.components;\n    \n    // Default settings for reset\n    const defaultSettings = {\n        background_color: '#ffffff',\n        background_image: '',\n        background_size: 'cover',\n        background_position: 'center center',\n        background_repeat: 'no-repeat',\n        logo_url: '',\n        logo_width: '84px',\n        logo_height: '84px',\n        logo_position: 'center',\n        form_background: '#ffffff',\n        form_border_radius: '4px',\n        form_padding: '20px',\n        button_color: '#0073aa',\n        button_text_color: '#ffffff',\n        custom_css: ''\n    };\n    \n    // Initialize each color picker input\n    $('.color-picker').each(function() {\n        const input = $(this);\n        const inputId = input.attr('id');\n        const defaultColor = input.data('default-color') || '#ffffff';\n        const currentColor = input.val() || defaultColor;\n        const container = $('<div class=\"gutenberg-color-picker-container\"></div>');\n        \n        // Replace the input with a container\n        input.after(container);\n        \n        // Create a hidden input to store the value\n        const hiddenInput = $(`<input type=\"hidden\" id=\"${inputId}\" name=\"${inputId}\" value=\"${currentColor}\">`);\n        input.replaceWith(hiddenInput);\n        \n        // Create color picker component\n        class ColorPickerComponent extends Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    color: props.initialColor,\n                    isOpen: false\n                };\n            }\n            \n            render() {\n                return createElement(\n                    BaseControl,\n                    { id: this.props.inputId },\n                    createElement('div', { className: 'color-picker-main flex items-center' },\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-button',\n                            onClick: () => this.setState({ isOpen: !this.state.isOpen }),\n                            style: {\n                                backgroundColor: this.state.color,\n                                width: '32px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                boxShadow: '0 1px 0 #ccc'\n                            }\n                        }),\n                        createElement('input', {\n                            type: 'text',\n                            className: 'color-picker-input',\n                            value: this.state.color,\n                            onChange: (e) => {\n                                const newColor = e.target.value;\n                                this.setState({ color: newColor });\n                                this.props.onChange(newColor);\n                            },\n                            style: {\n                                marginLeft: '8px',\n                                width: '80px',\n                                height: '32px',\n                                padding: '0 8px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                fontFamily: 'monospace'\n                            }\n                        }),\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-clear',\n                            onClick: () => {\n                                this.setState({ color: '' });\n                                this.props.onChange('');\n                            },\n                            style: {\n                                marginLeft: '4px',\n                                padding: '0',\n                                width: '28px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                background: '#f0f0f1',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center'\n                            }\n                        }, createElement('span', {\n                            className: 'dashicons dashicons-no-alt',\n                            style: {\n                                fontSize: '16px',\n                                width: '16px',\n                                height: '16px'\n                            }\n                        }))\n                    ),\n                    this.state.isOpen && createElement(\n                        'div',\n                        { className: 'color-picker-popover' },\n                        createElement(\n                            ColorPicker,\n                            {\n                                color: this.state.color,\n                                onChangeComplete: (colorObject) => {\n                                    const newColor = colorObject.hex;\n                                    this.setState({ color: newColor });\n                                    this.props.onChange(newColor);\n                                }\n                            }\n                        )\n                    )\n                );\n            }\n        }\n        \n        // Render the component\n        render(\n            createElement(ColorPickerComponent, {\n                inputId: inputId,\n                initialColor: currentColor,\n                onChange: (newColor) => {\n                    hiddenInput.val(newColor).trigger('change');\n                    updatePreview();\n                }\n            }),\n            container[0]\n        );\n    });\n\n    // Initialize media dropzones\n    $('.media-dropzone').each(function() {\n        const dropzone = $(this);\n        const dropzoneArea = dropzone.find('.dropzone-area');\n        const input = dropzone.find('input[type=\"hidden\"]');\n        const imagePreview = dropzone.find('.image-preview');\n        const previewImg = imagePreview.find('img');\n        const targetField = dropzone.data('target');\n        \n        // Show existing image preview if available\n        if (input.val()) {\n            previewImg.attr('src', input.val());\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            // Try to get the filename from the URL\n            const url = new URL(input.val());\n            const filename = url.pathname.split('/').pop();\n            imagePreview.find('.filename').text(filename);\n            \n            // Create a temporary image to get dimensions\n            const tempImg = new Image();\n            tempImg.onload = function() {\n                imagePreview.find('.dimensions').text(`${this.width} × ${this.height}`);\n            };\n            tempImg.src = input.val();\n        }\n        \n        // Setup click handler on dropzone area to open media library\n        dropzoneArea.on('click', function(e) {\n            e.preventDefault();\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle drag and drop events\n        dropzoneArea.on('dragover', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).addClass('dragover');\n        });\n        \n        dropzoneArea.on('dragleave', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n        });\n        \n        dropzoneArea.on('drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n            \n            // Open the media library instead of direct handling\n            // WordPress media library can handle the dropped files\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle remove image button\n        dropzone.find('.remove-image-button').on('click', function(e) {\n            e.preventDefault();\n            input.val('').trigger('change');\n            imagePreview.addClass('hidden');\n            dropzoneArea.removeClass('hidden');\n            updatePreview();\n        });\n    });\n    \n    // Handle all image property toggle buttons - Keep popovers within their parent containers\n    $('.toggle-image-properties').on('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const button = $(this);\n        const targetId = button.data('target');\n        const popover = $(`#${targetId}`);\n        \n        // Close any other open popovers\n        $('.image-properties.active').not(popover).removeClass('active');\n        \n        // Toggle current popover visibility\n        popover.toggleClass('active');\n        \n        // Make sure popover is in right position (no need to manually position since we use CSS)\n        if (popover.hasClass('active')) {\n            // Ensure the popover is within the #modify-login-builder container\n            if (!popover.closest('#modify-login-builder').length) {\n                $('#modify-login-builder').find(`#${targetId}`).addClass('active');\n            }\n        }\n    });\n    \n    // Function to open the media library\n    function openMediaLibrary(input, imagePreview, dropzoneArea) {\n        const frame = wp.media({\n            title: 'Select Image',\n            button: {\n                text: 'Use this image'\n            },\n            multiple: false,\n            library: {\n                type: 'image'\n            }\n        });\n\n        frame.on('select', function() {\n            const attachment = frame.state().get('selection').first().toJSON();\n            input.val(attachment.url).trigger('change');\n            \n            // Update preview\n            imagePreview.find('img').attr('src', attachment.url);\n            imagePreview.find('.filename').text(attachment.filename);\n            imagePreview.find('.dimensions').text(`${attachment.width} × ${attachment.height}`);\n            \n            // Show preview, hide dropzone\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            updatePreview();\n        });\n\n        frame.open();\n    }\n    \n    // Close popovers when clicking outside\n    $(document).on('click', function(e) {\n        if (!$(e.target).closest('.image-properties, .toggle-image-properties, .color-picker-popover, .color-picker-button').length) {\n            $('.image-properties.active').removeClass('active');\n        }\n    });\n    \n    // Close popovers when clicking close button\n    $('.close-popover').on('click', function(e) {\n        e.preventDefault();\n        $(this).closest('.image-properties').removeClass('active');\n    });\n\n    // Handle form changes\n    $('.form-group input:not(.color-picker), .form-group textarea, .form-group select').on('change input', function() {\n        updatePreview();\n    });\n\n    // Update preview iframe\n    function updatePreview() {\n        const preview = $('#login-preview');\n        const settings = {};\n        \n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            settings[$(this).attr('name')] = $(this).val();\n        });\n\n        // Apply settings to preview iframe\n        const previewDoc = preview[0].contentDocument || preview[0].contentWindow.document;\n        const style = previewDoc.createElement('style');\n        \n        // Generate CSS based on current settings\n        let css = `\n            body.login {\n                ${settings.background_color ? `background-color: ${settings.background_color};` : ''}\n                ${settings.background_image ? `\n                    background-image: url('${settings.background_image}');\n                    background-size: ${settings.background_size || 'cover'};\n                    background-position: ${settings.background_position || 'center center'};\n                    background-repeat: ${settings.background_repeat || 'no-repeat'};\n                ` : 'background-image: none;'}\n            }\n            #login {\n                ${settings.form_background ? `background: ${settings.form_background};` : ''}\n                ${settings.form_border_radius ? `border-radius: ${settings.form_border_radius};` : ''}\n                ${settings.form_padding ? `padding: ${settings.form_padding};` : ''}\n            }\n            .wp-core-ui .button-primary {\n                ${settings.button_color ? `background: ${settings.button_color}; border-color: ${settings.button_color};` : ''}\n                ${settings.button_text_color ? `color: ${settings.button_text_color};` : ''}\n            }\n        `;\n        \n        // Add logo styles if logo is set\n        if (settings.logo_url) {\n            css += `\n                .login h1 a {\n                    background-image: url('${settings.logo_url}');\n                    ${settings.logo_width ? `width: ${settings.logo_width};` : ''}\n                    ${settings.logo_height ? `height: ${settings.logo_height};` : ''}\n                    background-size: contain;\n                    background-position: center;\n                    background-repeat: no-repeat;\n                    text-indent: -9999px;\n                    ${settings.logo_position ? `text-align: ${settings.logo_position};` : ''}\n                }\n            `;\n        } else {\n            css += `\n                .login h1 a {\n                    background-image: none;\n                    width: auto;\n                    height: auto;\n                    text-indent: 0;\n                }\n            `;\n        }\n        \n        // Add custom CSS\n        if (settings.custom_css) {\n            css += settings.custom_css;\n        }\n        \n        style.textContent = css;\n        previewDoc.head.appendChild(style);\n    }\n\n    // Handle save button\n    $('.save-button').on('click', function(e) {\n        e.preventDefault();\n        const button = $(this);\n        const formData = new FormData();\n\n        // Add action parameter for saving\n        formData.append('action', 'modify_login_save_builder_settings');\n        formData.append('nonce', modifyLoginBuilder.nonce);\n\n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            formData.append($(this).attr('name'), $(this).val());\n        });\n\n        // Disable button and show loading state\n        button.prop('disabled', true).text('Saving...');\n\n        // Send AJAX request to save settings\n        $.ajax({\n            url: modifyLoginBuilder.ajax_url,\n            type: 'POST',\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function(response) {\n                if (response.success) {\n                    button.text('Settings Saved!');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                } else {\n                    button.text('Error Saving');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                }\n            },\n            error: function() {\n                button.text('Error Saving');\n                setTimeout(function() {\n                    button.text('Save Settings');\n                }, 2000);\n            },\n            complete: function() {\n                button.prop('disabled', false);\n            }\n        });\n    });\n    \n    // Handle reset button\n    $('#reset-all-button').on('click', function(e) {\n        e.preventDefault();\n        \n        // Create custom confirmation modal\n        const modalOverlay = $('<div class=\"custom-modal-overlay\"></div>');\n        const modal = $(`\n            <div class=\"custom-modal bg-white rounded-lg shadow-lg w-96\">\n                <div class=\"custom-modal-header px-5 py-4 border-b border-gray-200 flex items-center\">\n                    <span class=\"dashicons dashicons-info text-blue-500 mr-2 text-xl\"></span>\n                    <h3 class=\"custom-modal-title text-lg font-semibold text-gray-900\">Reset Form</h3>\n                </div>\n                <div class=\"custom-modal-content p-5 text-gray-600\">\n                    <p class=\"mb-2\">You are about to reset all form fields to their default values.</p>\n                    <p class=\"mb-2\">This will only reset the form, not save the changes.</p>\n                    <p>Click Save after resetting if you want to apply these changes.</p>\n                </div>\n                <div class=\"custom-modal-actions p-4 bg-gray-50 flex justify-end gap-3 rounded-b-lg\">\n                    <button class=\"custom-modal-cancel px-4 py-2 bg-gray-200 text-gray-700 rounded-md hover:bg-gray-300\">Cancel</button>\n                    <button class=\"custom-modal-confirm px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600\">Reset Form</button>\n                </div>\n            </div>\n        `);\n        \n        modalOverlay.append(modal);\n        $('body').append(modalOverlay);\n        \n        // Fade in animation\n        setTimeout(function() {\n            modalOverlay.addClass('active');\n        }, 10);\n        \n        // Handle cancel button\n        modal.find('.custom-modal-cancel').on('click', function() {\n            // Close modal with animation\n            modalOverlay.removeClass('active');\n            setTimeout(function() {\n                modalOverlay.remove();\n            }, 300);\n        });\n        \n        // Handle confirm button\n        modal.find('.custom-modal-confirm').on('click', function() {\n            // Close modal with animation\n            modalOverlay.removeClass('active');\n            setTimeout(function() {\n                modalOverlay.remove();\n                \n                // Get the reset button\n                const button = $('#reset-all-button');\n                \n                // Visual feedback\n                button.addClass('opacity-50');\n            \n                // Reset form fields in the UI\n                // Reset all inputs to empty values\n                $('input#background_color').val('').trigger('change');\n                $('input#form_background').val('').trigger('change');\n                $('input#button_color').val('').trigger('change');\n                $('input#button_text_color').val('').trigger('change');\n                \n                // Reset image fields\n                $('input#background_image').val('').trigger('change');\n                $('input#logo_url').val('').trigger('change');\n                \n                // Reset select fields - also empty these\n                $('select#background_size').val('').trigger('change');\n                $('select#background_position').val('').trigger('change');\n                $('select#background_repeat').val('').trigger('change');\n                $('select#logo_position').val('').trigger('change');\n                \n                // Reset input text fields - also empty these\n                $('input#form_border_radius').val('').trigger('change');\n                $('input#form_padding').val('').trigger('change');\n                $('input#logo_width').val('').trigger('change');\n                $('input#logo_height').val('').trigger('change');\n                \n                // Reset textarea\n                $('textarea#custom_css').val('').trigger('change');\n                \n                // Hide all image previews and show dropzones\n                $('.image-preview').addClass('hidden');\n                $('.dropzone-area').removeClass('hidden');\n                \n                // Force refresh color pickers UI by manually updating them\n                $('.gutenberg-color-picker-container').each(function(){\n                    const container = $(this);\n                    const hiddenInput = container.prev('input[type=\"hidden\"]');\n                    \n                    // Update color button and text display\n                    container.find('.color-picker-button').css('background-color', 'transparent');\n                    container.find('.color-picker-input').val('');\n                });\n                \n                // Update preview\n                updatePreview();\n                \n                // Show success notification\n                showNotification('success', 'Form has been reset to default values. Click Save to apply changes.');\n                \n                // Reset button state\n                button.removeClass('opacity-50');\n            }, 300);\n        });\n    });\n    \n    // Initialize preview\n    updatePreview();\n});"],"names":["jQuery","document","ready","$","_wp$element","wp","element","Component","render","createElement","_wp$components","components","ColorPicker","BaseControl","openMediaLibrary","input","imagePreview","dropzoneArea","frame","media","title","button","text","multiple","library","type","on","attachment","state","get","first","toJSON","val","url","trigger","find","attr","filename","concat","width","height","removeClass","addClass","updatePreview","open","preview","settings","each","this","previewDoc","contentDocument","contentWindow","style","css","background_color","background_image","background_size","background_position","background_repeat","form_background","form_border_radius","form_padding","button_color","button_text_color","logo_url","logo_width","logo_height","logo_position","custom_css","textContent","head","appendChild","inputId","defaultColor","data","currentColor","container","after","hiddenInput","replaceWith","ColorPickerComponent","_Component","props","_this","_classCallCheck","_callSuper","color","initialColor","isOpen","_inherits","key","value","_this2","id","className","onClick","setState","backgroundColor","borderRadius","border","cursor","boxShadow","onChange","e","newColor","target","marginLeft","padding","fontFamily","background","display","alignItems","justifyContent","fontSize","onChangeComplete","colorObject","hex","dropzone","previewImg","URL","pathname","split","pop","tempImg","Image","onload","src","preventDefault","stopPropagation","targetId","popover","not","toggleClass","hasClass","closest","length","formData","FormData","append","modifyLoginBuilder","nonce","prop","ajax","ajax_url","processData","contentType","success","response","setTimeout","error","complete","modalOverlay","modal","remove","prev","showNotification"],"sourceRoot":""}