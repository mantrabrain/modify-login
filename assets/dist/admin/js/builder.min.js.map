{"version":3,"file":"admin/js/builder.min.js","mappings":"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","sources":["webpack://modify-login/./src/admin/js/builder.js"],"sourcesContent":["jQuery(document).ready(function($) {\n    // Set up WordPress Gutenberg Color Picker\n    const { Component, render, createElement } = wp.element;\n    const { ColorPicker, BaseControl } = wp.components;\n    \n    // Debugging for reset button\n    console.log('Document ready - looking for reset button');\n    const resetButton = $('.reset-button');\n    console.log('Reset button found:', resetButton.length > 0);\n    \n    // Default settings for reset\n    const defaultSettings = {\n        background_color: '#ffffff',\n        background_image: '',\n        background_size: 'cover',\n        background_position: 'center center',\n        background_repeat: 'no-repeat',\n        logo_url: '',\n        logo_width: '84px',\n        logo_height: '84px',\n        logo_position: 'center',\n        form_background: '#ffffff',\n        form_border_radius: '4px',\n        form_padding: '20px',\n        button_color: '#0073aa',\n        button_text_color: '#ffffff',\n        custom_css: ''\n    };\n    \n    // Initialize each color picker input\n    $('.color-picker').each(function() {\n        const input = $(this);\n        const inputId = input.attr('id');\n        const defaultColor = input.data('default-color') || '#ffffff';\n        const currentColor = input.val() || defaultColor;\n        const container = $('<div class=\"gutenberg-color-picker-container\"></div>');\n        \n        // Replace the input with a container\n        input.after(container);\n        \n        // Create a hidden input to store the value\n        const hiddenInput = $(`<input type=\"hidden\" id=\"${inputId}\" name=\"${inputId}\" value=\"${currentColor}\">`);\n        input.replaceWith(hiddenInput);\n        \n        // Create color picker component\n        class ColorPickerComponent extends Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    color: props.initialColor,\n                    isOpen: false\n                };\n            }\n            \n            render() {\n                return createElement(\n                    BaseControl,\n                    { id: this.props.inputId },\n                    createElement('div', { className: 'color-picker-main' },\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-button',\n                            onClick: () => this.setState({ isOpen: !this.state.isOpen }),\n                            style: {\n                                backgroundColor: this.state.color,\n                                width: '32px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                boxShadow: '0 1px 0 #ccc'\n                            }\n                        }),\n                        createElement('span', {\n                            className: 'color-picker-value',\n                            style: {\n                                marginLeft: '8px',\n                                lineHeight: '32px',\n                                verticalAlign: 'top'\n                            }\n                        }, this.state.color)\n                    ),\n                    this.state.isOpen && createElement(\n                        'div',\n                        { className: 'color-picker-popover' },\n                        createElement(\n                            ColorPicker,\n                            {\n                                color: this.state.color,\n                                onChangeComplete: (colorObject) => {\n                                    const newColor = colorObject.hex;\n                                    this.setState({ color: newColor });\n                                    this.props.onChange(newColor);\n                                }\n                            }\n                        )\n                    )\n                );\n            }\n        }\n        \n        // Render the component\n        render(\n            createElement(ColorPickerComponent, {\n                inputId: inputId,\n                initialColor: currentColor,\n                onChange: (newColor) => {\n                    hiddenInput.val(newColor).trigger('change');\n                    updatePreview();\n                }\n            }),\n            container[0]\n        );\n    });\n\n    // Initialize media dropzones\n    $('.media-dropzone').each(function() {\n        const dropzone = $(this);\n        const dropzoneArea = dropzone.find('.dropzone-area');\n        const input = dropzone.find('input[type=\"hidden\"]');\n        const imagePreview = dropzone.find('.image-preview');\n        const previewImg = imagePreview.find('img');\n        const targetField = dropzone.data('target');\n        \n        // Show existing image preview if available\n        if (input.val()) {\n            previewImg.attr('src', input.val());\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            // Try to get the filename from the URL\n            const url = new URL(input.val());\n            const filename = url.pathname.split('/').pop();\n            imagePreview.find('.filename').text(filename);\n            \n            // Create a temporary image to get dimensions\n            const tempImg = new Image();\n            tempImg.onload = function() {\n                imagePreview.find('.dimensions').text(`${this.width} × ${this.height}`);\n            };\n            tempImg.src = input.val();\n        }\n        \n        // Setup click handler on dropzone area to open media library\n        dropzoneArea.on('click', function(e) {\n            e.preventDefault();\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle drag and drop events\n        dropzoneArea.on('dragover', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).addClass('dragover');\n        });\n        \n        dropzoneArea.on('dragleave', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n        });\n        \n        dropzoneArea.on('drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n            \n            // Open the media library instead of direct handling\n            // WordPress media library can handle the dropped files\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle remove image button\n        dropzone.find('.remove-image-button').on('click', function(e) {\n            e.preventDefault();\n            input.val('').trigger('change');\n            imagePreview.addClass('hidden');\n            dropzoneArea.removeClass('hidden');\n            updatePreview();\n        });\n    });\n    \n    // Handle all image property toggle buttons - Keep popovers within their parent containers\n    $('.toggle-image-properties').on('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const button = $(this);\n        const targetId = button.data('target');\n        const popover = $(`#${targetId}`);\n        \n        // Close any other open popovers\n        $('.image-properties.active').not(popover).removeClass('active');\n        \n        // Toggle current popover visibility\n        popover.toggleClass('active');\n        \n        // Make sure popover is in right position (no need to manually position since we use CSS)\n        if (popover.hasClass('active')) {\n            // Ensure the popover is within the #modify-login-builder container\n            if (!popover.closest('#modify-login-builder').length) {\n                $('#modify-login-builder').find(`#${targetId}`).addClass('active');\n            }\n        }\n    });\n    \n    // Function to open the media library\n    function openMediaLibrary(input, imagePreview, dropzoneArea) {\n        const frame = wp.media({\n            title: 'Select Image',\n            button: {\n                text: 'Use this image'\n            },\n            multiple: false,\n            library: {\n                type: 'image'\n            }\n        });\n\n        frame.on('select', function() {\n            const attachment = frame.state().get('selection').first().toJSON();\n            input.val(attachment.url).trigger('change');\n            \n            // Update preview\n            imagePreview.find('img').attr('src', attachment.url);\n            imagePreview.find('.filename').text(attachment.filename);\n            imagePreview.find('.dimensions').text(`${attachment.width} × ${attachment.height}`);\n            \n            // Show preview, hide dropzone\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            updatePreview();\n        });\n\n        frame.open();\n    }\n    \n    // Close popovers when clicking outside\n    $(document).on('click', function(e) {\n        if (!$(e.target).closest('.image-properties, .toggle-image-properties, .color-picker-popover, .color-picker-button').length) {\n            $('.image-properties.active').removeClass('active');\n        }\n    });\n    \n    // Close popovers when clicking close button\n    $('.close-popover').on('click', function(e) {\n        e.preventDefault();\n        $(this).closest('.image-properties').removeClass('active');\n    });\n\n    // Handle form changes\n    $('.form-group input:not(.color-picker), .form-group textarea, .form-group select').on('change input', function() {\n        updatePreview();\n    });\n\n    // Update preview iframe\n    function updatePreview() {\n        const preview = $('#login-preview');\n        const settings = {};\n        \n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            settings[$(this).attr('name')] = $(this).val();\n        });\n\n        // Apply settings to preview iframe\n        const previewDoc = preview[0].contentDocument || preview[0].contentWindow.document;\n        const style = previewDoc.createElement('style');\n        \n        // Generate CSS based on current settings\n        let css = `\n            body.login {\n                background-color: ${settings.background_color || '#ffffff'};\n                ${settings.background_image ? `\n                    background-image: url('${settings.background_image}');\n                    background-size: ${settings.background_size || 'cover'};\n                    background-position: ${settings.background_position || 'center center'};\n                    background-repeat: ${settings.background_repeat || 'no-repeat'};\n                ` : 'background-image: none;'}\n            }\n            #login {\n                background: ${settings.form_background || '#ffffff'};\n                border-radius: ${settings.form_border_radius || '4px'};\n                padding: ${settings.form_padding || '20px'};\n            }\n            .wp-core-ui .button-primary {\n                background: ${settings.button_color || '#0073aa'};\n                border-color: ${settings.button_color || '#0073aa'};\n                color: ${settings.button_text_color || '#ffffff'};\n            }\n        `;\n        \n        // Add logo styles if logo is set\n        if (settings.logo_url) {\n            css += `\n                .login h1 a {\n                    background-image: url('${settings.logo_url}');\n                    width: ${settings.logo_width || '84px'};\n                    height: ${settings.logo_height || '84px'};\n                    background-size: contain;\n                    background-position: center;\n                    background-repeat: no-repeat;\n                    text-indent: -9999px;\n                    text-align: ${settings.logo_position || 'center'};\n                }\n            `;\n        } else {\n            css += `\n                .login h1 a {\n                    background-image: none;\n                    width: auto;\n                    height: auto;\n                    text-indent: 0;\n                }\n            `;\n        }\n        \n        // Add custom CSS\n        if (settings.custom_css) {\n            css += settings.custom_css;\n        }\n        \n        style.textContent = css;\n        previewDoc.head.appendChild(style);\n    }\n\n    // Handle save button\n    $('.save-button').on('click', function(e) {\n        e.preventDefault();\n        const button = $(this);\n        const formData = new FormData();\n\n        // Add action parameter for saving\n        formData.append('action', 'modify_login_save_builder_settings');\n        formData.append('nonce', modifyLoginBuilder.nonce);\n\n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            formData.append($(this).attr('name'), $(this).val());\n        });\n\n        // Disable button and show loading state\n        button.prop('disabled', true).text('Saving...');\n\n        // Send AJAX request to save settings\n        $.ajax({\n            url: modifyLoginBuilder.ajax_url,\n            type: 'POST',\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function(response) {\n                if (response.success) {\n                    button.text('Settings Saved!');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                } else {\n                    button.text('Error Saving');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                }\n            },\n            error: function() {\n                button.text('Error Saving');\n                setTimeout(function() {\n                    button.text('Save Settings');\n                }, 2000);\n            },\n            complete: function() {\n                button.prop('disabled', false);\n            }\n        });\n    });\n    \n    // Handle reset button\n    $('.reset-button').on('click', function(e) {\n        e.preventDefault();\n        \n        console.log('Reset button clicked');\n        \n        // Create and show notification\n        const notification = $('<div class=\"ml-notification\"></div>')\n            .css({\n                'position': 'fixed',\n                'top': '30px',\n                'left': '50%',\n                'transform': 'translateX(-50%)',\n                'background-color': '#f44336',\n                'color': 'white',\n                'padding': '15px 25px',\n                'border-radius': '4px',\n                'z-index': '9999',\n                'box-shadow': '0 4px 8px rgba(0,0,0,0.2)',\n                'font-weight': 'bold',\n                'font-size': '14px',\n                'display': 'flex',\n                'align-items': 'center',\n                'max-width': '90%',\n                'opacity': '0',\n                'transition': 'opacity 0.3s ease'\n            })\n            .html('<span style=\"margin-right:10px;\">⚠️</span> WARNING: You are about to reset all login customization settings to their default values!');\n        \n        $('body').append(notification);\n        \n        // Fade in the notification\n        setTimeout(function() {\n            notification.css('opacity', '1');\n        }, 10);\n        \n        // Show confirmation dialog after 1 second\n        setTimeout(function() {\n            if (confirm('Are you sure you want to reset all settings to their default values? This cannot be undone.')) {\n                const button = resetButton;\n                \n                // Remove notification\n                notification.remove();\n                \n                // Visual feedback\n                button.prop('disabled', true).text('Resetting...');\n                \n                // Send AJAX request to reset settings on the server\n                const formData = new FormData();\n                formData.append('action', 'modify_login_reset_builder_settings');\n                formData.append('nonce', modifyLoginBuilder.nonce);\n                \n                $.ajax({\n                    url: modifyLoginBuilder.ajax_url,\n                    type: 'POST',\n                    data: formData,\n                    processData: false,\n                    contentType: false,\n                    success: function(response) {\n                        if (response.success) {\n                            // Reset form fields in the UI\n                            // Reset hidden inputs for color pickers\n                            $('input#background_color').val(defaultSettings.background_color).trigger('change');\n                            $('input#form_background').val(defaultSettings.form_background).trigger('change');\n                            $('input#button_color').val(defaultSettings.button_color).trigger('change');\n                            $('input#button_text_color').val(defaultSettings.button_text_color).trigger('change');\n                            \n                            // Reset image fields\n                            $('input#background_image').val('').trigger('change');\n                            $('input#logo_url').val('').trigger('change');\n                            \n                            // Reset select fields\n                            $('select#background_size').val(defaultSettings.background_size).trigger('change');\n                            $('select#background_position').val(defaultSettings.background_position).trigger('change');\n                            $('select#background_repeat').val(defaultSettings.background_repeat).trigger('change');\n                            $('select#logo_position').val(defaultSettings.logo_position).trigger('change');\n                            \n                            // Reset input text fields\n                            $('input#form_border_radius').val(defaultSettings.form_border_radius).trigger('change');\n                            $('input#form_padding').val(defaultSettings.form_padding).trigger('change');\n                            $('input#logo_width').val(defaultSettings.logo_width).trigger('change');\n                            $('input#logo_height').val(defaultSettings.logo_height).trigger('change');\n                            \n                            // Reset textarea\n                            $('textarea#custom_css').val(defaultSettings.custom_css).trigger('change');\n                            \n                            // Hide all image previews and show dropzones\n                            $('.image-preview').addClass('hidden');\n                            $('.dropzone-area').removeClass('hidden');\n                            \n                            // Force refresh color pickers UI by manually updating them\n                            $('.gutenberg-color-picker-container').each(function(){\n                                const container = $(this);\n                                const hiddenInput = container.prev('input[type=\"hidden\"]');\n                                const id = hiddenInput.attr('id');\n                                const defaultColor = defaultSettings[id] || '#ffffff';\n                                \n                                // Update color button and text display\n                                container.find('.color-picker-button').css('background-color', defaultColor);\n                                container.find('.color-picker-value').text(defaultColor);\n                            });\n                            \n                            // Update preview\n                            updatePreview();\n                            \n                            // Update visual state\n                            button.text('Reset Complete!');\n                        } else {\n                            button.text('Error Resetting');\n                        }\n                    },\n                    error: function() {\n                        button.text('Error Resetting');\n                    },\n                    complete: function() {\n                        setTimeout(function() {\n                            button.prop('disabled', false).text('Reset All');\n                        }, 1500);\n                    }\n                });\n            } else {\n                // Remove notification if user cancels\n                notification.remove();\n            }\n        }, 1000);\n    });\n    \n    // Initialize preview\n    updatePreview();\n});"],"names":["jQuery","document","ready","$","_wp$element","wp","element","Component","render","createElement","_wp$components","components","ColorPicker","BaseControl","console","log","resetButton","length","defaultSettings","background_color","background_image","background_size","background_position","background_repeat","logo_url","logo_width","logo_height","logo_position","form_background","form_border_radius","form_padding","button_color","button_text_color","custom_css","openMediaLibrary","input","imagePreview","dropzoneArea","frame","media","title","button","text","multiple","library","type","on","attachment","state","get","first","toJSON","val","url","trigger","find","attr","filename","concat","width","height","removeClass","addClass","updatePreview","open","preview","settings","each","this","previewDoc","contentDocument","contentWindow","style","css","textContent","head","appendChild","inputId","defaultColor","data","currentColor","container","after","hiddenInput","replaceWith","ColorPickerComponent","_Component","props","_this","_classCallCheck","_callSuper","color","initialColor","isOpen","_inherits","key","value","_this2","id","className","onClick","setState","backgroundColor","borderRadius","border","cursor","boxShadow","marginLeft","lineHeight","verticalAlign","onChangeComplete","colorObject","newColor","hex","onChange","dropzone","previewImg","URL","pathname","split","pop","tempImg","Image","onload","src","e","preventDefault","stopPropagation","targetId","popover","not","toggleClass","hasClass","closest","target","formData","FormData","append","modifyLoginBuilder","nonce","prop","ajax","ajax_url","processData","contentType","success","response","setTimeout","error","complete","notification","html","confirm","remove","prev"],"sourceRoot":""}