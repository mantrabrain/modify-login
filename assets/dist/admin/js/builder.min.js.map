{"version":3,"file":"admin/js/builder.min.js","mappings":"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","sources":["webpack://modify-login/./src/admin/js/builder.js"],"sourcesContent":["jQuery(document).ready(function($) {\n    // Set up WordPress Gutenberg Color Picker\n    const { Component, render, createElement } = wp.element;\n    const { ColorPicker, BaseControl } = wp.components;\n    \n    // Initialize each color picker input\n    $('.color-picker').each(function() {\n        const input = $(this);\n        const inputId = input.attr('id');\n        const defaultColor = input.data('default-color') || '#ffffff';\n        const currentColor = input.val() || defaultColor;\n        const container = $('<div class=\"gutenberg-color-picker-container\"></div>');\n        \n        // Replace the input with a container\n        input.after(container);\n        \n        // Create a hidden input to store the value\n        const hiddenInput = $(`<input type=\"hidden\" id=\"${inputId}\" name=\"${inputId}\" value=\"${currentColor}\">`);\n        input.replaceWith(hiddenInput);\n        \n        // Create color picker component\n        class ColorPickerComponent extends Component {\n            constructor(props) {\n                super(props);\n                this.state = {\n                    color: props.initialColor,\n                    isOpen: false\n                };\n            }\n            \n            render() {\n                return createElement(\n                    BaseControl,\n                    { id: this.props.inputId },\n                    createElement('div', { className: 'color-picker-main' },\n                        createElement('button', {\n                            type: 'button',\n                            className: 'color-picker-button',\n                            onClick: () => this.setState({ isOpen: !this.state.isOpen }),\n                            style: {\n                                backgroundColor: this.state.color,\n                                width: '32px',\n                                height: '32px',\n                                borderRadius: '4px',\n                                border: '1px solid #ccc',\n                                cursor: 'pointer',\n                                boxShadow: '0 1px 0 #ccc'\n                            }\n                        }),\n                        createElement('span', {\n                            className: 'color-picker-value',\n                            style: {\n                                marginLeft: '8px',\n                                lineHeight: '32px',\n                                verticalAlign: 'top'\n                            }\n                        }, this.state.color)\n                    ),\n                    this.state.isOpen && createElement(\n                        'div',\n                        { className: 'color-picker-popover' },\n                        createElement(\n                            ColorPicker,\n                            {\n                                color: this.state.color,\n                                onChangeComplete: (colorObject) => {\n                                    const newColor = colorObject.hex;\n                                    this.setState({ color: newColor });\n                                    this.props.onChange(newColor);\n                                }\n                            }\n                        )\n                    )\n                );\n            }\n        }\n        \n        // Render the component\n        render(\n            createElement(ColorPickerComponent, {\n                inputId: inputId,\n                initialColor: currentColor,\n                onChange: (newColor) => {\n                    hiddenInput.val(newColor).trigger('change');\n                    updatePreview();\n                }\n            }),\n            container[0]\n        );\n    });\n\n    // Initialize media dropzones\n    $('.media-dropzone').each(function() {\n        const dropzone = $(this);\n        const dropzoneArea = dropzone.find('.dropzone-area');\n        const input = dropzone.find('input[type=\"hidden\"]');\n        const imagePreview = dropzone.find('.image-preview');\n        const previewImg = imagePreview.find('img');\n        const targetField = dropzone.data('target');\n        \n        // Show existing image preview if available\n        if (input.val()) {\n            previewImg.attr('src', input.val());\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            // Try to get the filename from the URL\n            const url = new URL(input.val());\n            const filename = url.pathname.split('/').pop();\n            imagePreview.find('.filename').text(filename);\n            \n            // Create a temporary image to get dimensions\n            const tempImg = new Image();\n            tempImg.onload = function() {\n                imagePreview.find('.dimensions').text(`${this.width} × ${this.height}`);\n            };\n            tempImg.src = input.val();\n        }\n        \n        // Setup click handler on dropzone area to open media library\n        dropzoneArea.on('click', function(e) {\n            e.preventDefault();\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle drag and drop events\n        dropzoneArea.on('dragover', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).addClass('dragover');\n        });\n        \n        dropzoneArea.on('dragleave', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n        });\n        \n        dropzoneArea.on('drop', function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            $(this).removeClass('dragover');\n            \n            // Open the media library instead of direct handling\n            // WordPress media library can handle the dropped files\n            openMediaLibrary(input, imagePreview, dropzoneArea);\n        });\n        \n        // Handle remove image button\n        dropzone.find('.remove-image-button').on('click', function(e) {\n            e.preventDefault();\n            input.val('').trigger('change');\n            imagePreview.addClass('hidden');\n            dropzoneArea.removeClass('hidden');\n            updatePreview();\n        });\n    });\n    \n    // Handle all image property toggle buttons\n    $('.toggle-image-properties').on('click', function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const button = $(this);\n        const targetId = button.data('target');\n        const popover = $(`#${targetId}`);\n        \n        // Close any other open popovers\n        $('.image-properties.active').not(popover).removeClass('active');\n        \n        // Toggle current popover visibility\n        popover.toggleClass('active');\n        \n        // Position the popover correctly\n        if (popover.hasClass('active')) {\n            const buttonRect = button[0].getBoundingClientRect();\n            const bodyRect = document.body.getBoundingClientRect();\n            \n            // Adjust position based on available space\n            let leftPos = buttonRect.left + window.scrollX - popover.outerWidth() + buttonRect.width;\n            if (leftPos < 0) {\n                leftPos = buttonRect.left + window.scrollX;\n            }\n            \n            // Set the popover position\n            popover.css({\n                top: buttonRect.bottom + window.scrollY + 5,\n                left: leftPos,\n                zIndex: 100\n            });\n        }\n    });\n    \n    // Function to open the media library\n    function openMediaLibrary(input, imagePreview, dropzoneArea) {\n        const frame = wp.media({\n            title: 'Select Image',\n            button: {\n                text: 'Use this image'\n            },\n            multiple: false,\n            library: {\n                type: 'image'\n            }\n        });\n\n        frame.on('select', function() {\n            const attachment = frame.state().get('selection').first().toJSON();\n            input.val(attachment.url).trigger('change');\n            \n            // Update preview\n            imagePreview.find('img').attr('src', attachment.url);\n            imagePreview.find('.filename').text(attachment.filename);\n            imagePreview.find('.dimensions').text(`${attachment.width} × ${attachment.height}`);\n            \n            // Show preview, hide dropzone\n            imagePreview.removeClass('hidden');\n            dropzoneArea.addClass('hidden');\n            \n            updatePreview();\n        });\n\n        frame.open();\n    }\n    \n    // Close popovers when clicking outside\n    $(document).on('click', function(e) {\n        if (!$(e.target).closest('.image-properties, .toggle-image-properties, .color-picker-popover, .color-picker-button').length) {\n            $('.image-properties.active').removeClass('active');\n        }\n    });\n    \n    // Close popovers when clicking close button\n    $('.close-popover').on('click', function(e) {\n        e.preventDefault();\n        $(this).closest('.image-properties').removeClass('active');\n    });\n\n    // Handle form changes\n    $('.form-group input:not(.color-picker), .form-group textarea, .form-group select').on('change input', function() {\n        updatePreview();\n    });\n\n    // Update preview iframe\n    function updatePreview() {\n        const preview = $('#login-preview');\n        const settings = {};\n        \n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            settings[$(this).attr('name')] = $(this).val();\n        });\n\n        // Apply settings to preview iframe\n        const previewDoc = preview[0].contentDocument || preview[0].contentWindow.document;\n        const style = previewDoc.createElement('style');\n        \n        // Generate CSS based on current settings\n        let css = `\n            body.login {\n                background-color: ${settings.background_color || '#ffffff'};\n                ${settings.background_image ? `\n                    background-image: url('${settings.background_image}');\n                    background-size: ${settings.background_size || 'cover'};\n                    background-position: ${settings.background_position || 'center center'};\n                    background-repeat: ${settings.background_repeat || 'no-repeat'};\n                ` : 'background-image: none;'}\n            }\n            #login {\n                background: ${settings.form_background || '#ffffff'};\n                border-radius: ${settings.form_border_radius || '4px'};\n                padding: ${settings.form_padding || '20px'};\n            }\n            .wp-core-ui .button-primary {\n                background: ${settings.button_color || '#0073aa'};\n                border-color: ${settings.button_color || '#0073aa'};\n                color: ${settings.button_text_color || '#ffffff'};\n            }\n        `;\n        \n        // Add logo styles if logo is set\n        if (settings.logo_url) {\n            css += `\n                .login h1 a {\n                    background-image: url('${settings.logo_url}');\n                    width: ${settings.logo_width || '84px'};\n                    height: ${settings.logo_height || '84px'};\n                    background-size: contain;\n                    background-position: center;\n                    background-repeat: no-repeat;\n                    text-indent: -9999px;\n                    text-align: ${settings.logo_position || 'center'};\n                }\n            `;\n        } else {\n            css += `\n                .login h1 a {\n                    background-image: none;\n                    width: auto;\n                    height: auto;\n                    text-indent: 0;\n                }\n            `;\n        }\n        \n        // Add custom CSS\n        if (settings.custom_css) {\n            css += settings.custom_css;\n        }\n        \n        style.textContent = css;\n        previewDoc.head.appendChild(style);\n    }\n\n    // Handle save button\n    $('.save-button').on('click', function(e) {\n        e.preventDefault();\n        const button = $(this);\n        const formData = new FormData();\n\n        // Add action parameter for saving\n        formData.append('action', 'modify_login_save_builder_settings');\n        formData.append('nonce', modifyLoginBuilder.nonce);\n\n        // Collect all form values\n        $('.form-group input, .form-group textarea, .form-group select').each(function() {\n            formData.append($(this).attr('name'), $(this).val());\n        });\n\n        // Disable button and show loading state\n        button.prop('disabled', true).text('Saving...');\n\n        // Send AJAX request to save settings\n        $.ajax({\n            url: modifyLoginBuilder.ajax_url,\n            type: 'POST',\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function(response) {\n                if (response.success) {\n                    button.text('Settings Saved!');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                } else {\n                    button.text('Error Saving');\n                    setTimeout(function() {\n                        button.text('Save Settings');\n                    }, 2000);\n                }\n            },\n            error: function() {\n                button.text('Error Saving');\n                setTimeout(function() {\n                    button.text('Save Settings');\n                }, 2000);\n            },\n            complete: function() {\n                button.prop('disabled', false);\n            }\n        });\n    });\n    \n    // Initialize preview\n    updatePreview();\n});"],"names":["jQuery","document","ready","$","_wp$element","wp","element","Component","render","createElement","_wp$components","components","ColorPicker","BaseControl","openMediaLibrary","input","imagePreview","dropzoneArea","frame","media","title","button","text","multiple","library","type","on","attachment","state","get","first","toJSON","val","url","trigger","find","attr","filename","concat","width","height","removeClass","addClass","updatePreview","open","preview","settings","each","this","previewDoc","contentDocument","contentWindow","style","css","background_color","background_image","background_size","background_position","background_repeat","form_background","form_border_radius","form_padding","button_color","button_text_color","logo_url","logo_width","logo_height","logo_position","custom_css","textContent","head","appendChild","inputId","defaultColor","data","currentColor","container","after","hiddenInput","replaceWith","ColorPickerComponent","_Component","props","_this","_classCallCheck","_callSuper","color","initialColor","isOpen","_inherits","key","value","_this2","id","className","onClick","setState","backgroundColor","borderRadius","border","cursor","boxShadow","marginLeft","lineHeight","verticalAlign","onChangeComplete","colorObject","newColor","hex","onChange","dropzone","previewImg","URL","pathname","split","pop","tempImg","Image","onload","src","e","preventDefault","stopPropagation","targetId","popover","not","toggleClass","hasClass","buttonRect","getBoundingClientRect","leftPos","body","left","window","scrollX","outerWidth","top","bottom","scrollY","zIndex","target","closest","length","formData","FormData","append","modifyLoginBuilder","nonce","prop","ajax","ajax_url","processData","contentType","success","response","setTimeout","error","complete"],"sourceRoot":""}