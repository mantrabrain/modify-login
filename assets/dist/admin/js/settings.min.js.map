{"version":3,"file":"admin/js/settings.min.js","mappings":"AAAAA,OAAOC,UAAUC,OAAM,SAASC,GAC5B,aAMA,IAAIC,EAHJD,EAAE,uBAAuBE,gBAIzBF,EAAE,wBAAwBG,GAAG,SAAS,SAASC,GAC3CA,EAAEC,iBACF,IACMC,EADSN,EAAEO,MACMC,KAAK,SACtBC,EAAQT,EAAE,IAADU,OAAKJ,IACdK,EAAUX,EAAE,IAADU,OAAKJ,EAAO,aAGzBL,IAMJA,EAAgBW,GAAGC,MAAM,CACrBC,MAAO,eACPC,OAAQ,CACJC,KAAM,kBAEVC,UAAU,KAIAd,GAAG,UAAU,WACvB,IAAMe,EAAajB,EAAckB,QAAQC,IAAI,aAAaC,QAAQC,SAClEb,EAAMc,IAAIL,EAAWM,KACrBb,EAAQc,KAAK,MAAOP,EAAWM,KAAKE,YAAY,SACpD,IAlBIzB,EAAc0B,MAsBtB,IAGA3B,EAAE,wBAAwB4B,MAAK,WAC3B,IAAMtB,EAAUN,EAAEO,MAAMC,KAAK,SACvBC,EAAQT,EAAE,IAADU,OAAKJ,IACdK,EAAUX,EAAE,IAADU,OAAKJ,EAAO,aAEzBG,EAAMc,OACNZ,EAAQe,YAAY,SAE5B,IAGA1B,EAAE,mBAAmB4B,MAAK,WACtB,IAAIC,EAAY7B,EAAEO,MACduB,EAAW9B,EAAE6B,EAAUrB,KAAK,YAEhC,SAASuB,IACDF,EAAUG,GAAG,YACbF,EAASG,YAETH,EAASI,SAEjB,CAGAH,IAGAF,EAAU1B,GAAG,SAAU4B,EAC3B,IAGA/B,EAAE,QAAQG,GAAG,UAAU,SAASC,GAC5B,IAAI+B,EAAQnC,EAAEO,MACV6B,GAAU,EAGdD,EAAME,KAAK,cAAcT,MAAK,WAC1B,IAAIU,EAAStC,EAAEO,MACV+B,EAAOf,MAIRe,EAAOZ,YAAY,UAHnBU,GAAU,EACVE,EAAOC,SAAS,SAIxB,IAEKH,IACDhC,EAAEC,iBACFmC,MAAM,uCAEd,IAGAxC,EAAE,cAAcG,GAAG,UAAU,SAASC,GAClCA,EAAEC,iBAEF,IAAI8B,EAAQnC,EAAEO,MACVkC,EAAgBN,EAAME,KAAK,yBAC3BK,EAAeD,EAAczB,OAGjCyB,EAAcE,KAAK,YAAY,GAAM3B,KAAK,aAE1ChB,EAAE4C,KAAK,CACHpB,IAAKqB,mBAAmBC,SACxBC,KAAM,OACNvC,KAAM,CACFwC,OAAQ,6BACRC,MAAOJ,mBAAmBI,MAC1BzC,KAAM2B,EAAMe,aAEhBC,QAAS,SAASC,GACVA,EAASD,QAEThB,EAAMkB,QAAQ,yCAA2CD,EAAS5C,KAAK8C,QAAU,cAGjFnB,EAAMkB,QAAQ,uCAAyCD,EAAS5C,KAAK8C,QAAU,aAEvF,EACAC,MAAO,WAEHpB,EAAMkB,QAAQ,6FAClB,EACAG,SAAU,WAENf,EAAcE,KAAK,YAAY,GAAO3B,KAAK0B,GAG3Ce,YAAW,WACPtB,EAAME,KAAK,WAAWqB,SAAQ,WAC1B1D,EAAEO,MAAMoD,QACZ,GACJ,GAAG,IACP,GAER,IAGA3D,EAAE,mBAAmBG,GAAG,SAAS,SAASC,GACtCA,EAAEC,iBACF,IAAIuD,EAAU5D,EAAEO,MACDP,EAAE4D,EAAQpD,KAAK,YAErBqD,aACb,IAGA7D,EAAE,YAAYG,GAAG,SAAS,SAASC,GAC/BA,EAAEC,iBAEF,IAAIyD,EAAO9D,EAAEO,MACTwD,EAASD,EAAKtD,KAAK,UAGvBR,EAAE,YAAY0B,YAAY,kBAC1BoC,EAAKvB,SAAS,kBAGdvC,EAAE,gBAAgBgE,OAClBhE,EAAE+D,GAAQE,MACd,GACJ","sources":["webpack://modify-login/./src/admin/js/settings.js"],"sourcesContent":["jQuery(document).ready(function($) {\n    'use strict';\n\n    // Initialize color pickers\n    $('input[type=\"color\"]').wpColorPicker();\n\n    // Initialize WordPress Media Uploader\n    let mediaUploader;\n    $('.upload-media-button').on('click', function(e) {\n        e.preventDefault();\n        const button = $(this);\n        const inputId = button.data('input');\n        const input = $(`#${inputId}`);\n        const preview = $(`#${inputId}_preview`);\n\n        // If the media uploader already exists, open it\n        if (mediaUploader) {\n            mediaUploader.open();\n            return;\n        }\n\n        // Create the media uploader\n        mediaUploader = wp.media({\n            title: 'Choose Image',\n            button: {\n                text: 'Use this image'\n            },\n            multiple: false\n        });\n\n        // When an image is selected, run a callback\n        mediaUploader.on('select', function() {\n            const attachment = mediaUploader.state().get('selection').first().toJSON();\n            input.val(attachment.url);\n            preview.attr('src', attachment.url).removeClass('hidden');\n        });\n\n        // Open the uploader dialog\n        mediaUploader.open();\n    });\n\n    // Show image previews on page load if URLs exist\n    $('.upload-media-button').each(function() {\n        const inputId = $(this).data('input');\n        const input = $(`#${inputId}`);\n        const preview = $(`#${inputId}_preview`);\n        \n        if (input.val()) {\n            preview.removeClass('hidden');\n        }\n    });\n\n    // Toggle sections based on checkbox state\n    $('.toggle-section').each(function() {\n        var $checkbox = $(this);\n        var $section = $($checkbox.data('section'));\n\n        function toggleSection() {\n            if ($checkbox.is(':checked')) {\n                $section.slideDown();\n            } else {\n                $section.slideUp();\n            }\n        }\n\n        // Initial state\n        toggleSection();\n\n        // On change\n        $checkbox.on('change', toggleSection);\n    });\n\n    // Form validation\n    $('form').on('submit', function(e) {\n        var $form = $(this);\n        var isValid = true;\n\n        // Validate required fields\n        $form.find('[required]').each(function() {\n            var $field = $(this);\n            if (!$field.val()) {\n                isValid = false;\n                $field.addClass('error');\n            } else {\n                $field.removeClass('error');\n            }\n        });\n\n        if (!isValid) {\n            e.preventDefault();\n            alert('Please fill in all required fields.');\n        }\n    });\n\n    // AJAX form submission\n    $('.ajax-form').on('submit', function(e) {\n        e.preventDefault();\n\n        var $form = $(this);\n        var $submitButton = $form.find('button[type=\"submit\"]');\n        var originalText = $submitButton.text();\n\n        // Disable submit button and show loading state\n        $submitButton.prop('disabled', true).text('Saving...');\n\n        $.ajax({\n            url: modify_login_admin.ajax_url,\n            type: 'POST',\n            data: {\n                action: 'modify_login_save_settings',\n                nonce: modify_login_admin.nonce,\n                data: $form.serialize()\n            },\n            success: function(response) {\n                if (response.success) {\n                    // Show success message\n                    $form.prepend('<div class=\"notice notice-success\"><p>' + response.data.message + '</p></div>');\n                } else {\n                    // Show error message\n                    $form.prepend('<div class=\"notice notice-error\"><p>' + response.data.message + '</p></div>');\n                }\n            },\n            error: function() {\n                // Show error message\n                $form.prepend('<div class=\"notice notice-error\"><p>An error occurred while saving the settings.</p></div>');\n            },\n            complete: function() {\n                // Re-enable submit button and restore original text\n                $submitButton.prop('disabled', false).text(originalText);\n\n                // Remove notices after 5 seconds\n                setTimeout(function() {\n                    $form.find('.notice').fadeOut(function() {\n                        $(this).remove();\n                    });\n                }, 5000);\n            }\n        });\n    });\n\n    // Preview functionality\n    $('.preview-button').on('click', function(e) {\n        e.preventDefault();\n        var $button = $(this);\n        var $preview = $($button.data('preview'));\n        \n        $preview.slideToggle();\n    });\n\n    // Tab functionality\n    $('.nav-tab').on('click', function(e) {\n        e.preventDefault();\n        \n        var $tab = $(this);\n        var target = $tab.data('target');\n        \n        // Update active tab\n        $('.nav-tab').removeClass('nav-tab-active');\n        $tab.addClass('nav-tab-active');\n        \n        // Show target section\n        $('.tab-content').hide();\n        $(target).show();\n    });\n}); "],"names":["jQuery","document","ready","$","mediaUploader","wpColorPicker","on","e","preventDefault","inputId","this","data","input","concat","preview","wp","media","title","button","text","multiple","attachment","state","get","first","toJSON","val","url","attr","removeClass","open","each","$checkbox","$section","toggleSection","is","slideDown","slideUp","$form","isValid","find","$field","addClass","alert","$submitButton","originalText","prop","ajax","modify_login_admin","ajax_url","type","action","nonce","serialize","success","response","prepend","message","error","complete","setTimeout","fadeOut","remove","$button","slideToggle","$tab","target","hide","show"],"sourceRoot":""}